"""Actualizaci√≥n de modelo para explorar y libros personales

Revision ID: a64751183750
Revises: 
Create Date: 2025-05-20 10:15:47.421510

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a64751183750'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create schema if not exists
    op.execute('CREATE SCHEMA IF NOT EXISTS public')

    # Create users table
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('email', sa.Text(), nullable=False),
                    sa.Column('password', sa.Text(), nullable=False),
                    sa.Column('is_active', sa.Boolean(),
                              nullable=False, server_default='true'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    schema='public'
                    )

    # Create explore_books table
    op.create_table('explore_books',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('cover_image', sa.Text(), nullable=True),
                    sa.Column('title', sa.Text(), nullable=False),
                    sa.Column('author_name', sa.Text(), nullable=False),
                    sa.Column('summary', sa.Text(), nullable=True),
                    sa.Column('genre', sa.Text(), nullable=True),
                    sa.Column('category', sa.Text(), nullable=True),
                    sa.Column('created_by', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['created_by'], ['public.users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='public'
                    )

    # Create personal_books table
    op.create_table('personal_books',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('cover_image', sa.Text(), nullable=True),
                    sa.Column('title', sa.Text(), nullable=False),
                    sa.Column('author_name', sa.Text(), nullable=False),
                    sa.Column('summary', sa.Text(), nullable=True),
                    sa.Column('genre', sa.Text(), nullable=True),
                    sa.Column('category', sa.Text(), nullable=True),
                    sa.Column('created_by', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['created_by'], ['public.users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='public'
                    )

    # Create favorites table
    op.create_table('favorites',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('book_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['public.users.id'], ),
                    sa.ForeignKeyConstraint(
                        ['book_id'], ['public.explore_books.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id', 'book_id'),
                    schema='public'
                    )

    # Create reviews table
    op.create_table('reviews',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('book_id', sa.Integer(), nullable=False),
                    sa.Column('review_text', sa.Text(), nullable=True),
                    sa.Column('rating', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['public.users.id'], ),
                    sa.ForeignKeyConstraint(
                        ['book_id'], ['public.personal_books.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id', 'book_id'),
                    schema='public'
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews', schema='public')
    op.drop_table('favorites', schema='public')
    op.drop_table('personal_books', schema='public')
    op.drop_table('explore_books', schema='public')
    op.drop_table('users', schema='public')
    # ### end Alembic commands ###
